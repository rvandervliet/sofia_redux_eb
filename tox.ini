[tox]
envlist =
    check-{style,security}
    test{,-oldestdeps,-alldeps}{,-pyargs,-warnings,-cov,-small}
    build-{docs,dist}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-oldestdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style with ruff
skip_install = true
deps =
    ruff
commands =
    ruff check sofia_redux

[testenv:check-security]
description = run bandit to check security compliance
skip_install = true
deps =
    bandit>=1.7
commands =
    bandit -r -ll -x sofia_redux/*test* -x sofia_redux/*/*test* sofia_redux

[testenv]
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    alldeps: with all optional dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    cov: with coverage
    small: skipping the most resource-intensive tests
pass_env =
    TOXENV
    CI
    CODECOV_*
    HOME
    STRICT_VALIDATION
    PASS_INVALID_VALUES
    VALIDATE_ON_ASSIGNMENT
    USERNAME
setenv =
    QT_QPA_PLATFORM = offscreen
extras =
    test
    alldeps: all
    alldeps: docs
deps =
    oldestdeps: minimum_dependencies
package =
    !pyargs: editable
    pyargs: wheel
commands_pre =
# Generate a requirements-min.txt file
    oldestdeps: minimum_dependencies sofia_redux --filename requirements-min.txt
# Force install everything in that file
    oldestdeps: pip install -r requirements-min.txt
    pip freeze
commands =
    pip freeze
    export QT_QPA_PLATFORM="offscreen"
    pytest \
    cov: --cov=sofia_redux --cov-report=xml --cov-report=html
    small: --ignore=sofia_redux/scan
    warnings: -W error \
    pyargs: {toxinidir}/docs --pyargs sofia_redux \
    {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras =
    docs
    all
allowlist_externals =
    rm
commands =
    rm -rf docs/api docs/_build
    sphinx-build docs docs/_build/html
    rm -rf docs/_build/html/.doctrees

[testenv:build-dist]
description = check build sdist/wheel
skip_install = true
allowlist_externals = rm
deps =
    build
commands =
    rm -rf dist
    python -m build
